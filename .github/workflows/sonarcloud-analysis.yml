name: SonarCloud Analysis

on:
  pull_request:
    branches:
      - main
    types: [reopened, synchronize, opened]
  push:
    branches:
      - main

jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Setup Java for SonarCloud
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Install SonarCloud scanner and Coverlet
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global coverlet.console

      - name: Restore project dependencies
        run: dotnet restore Ecommerce/Ecommerce.sln

      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"Learnathon-By-Geeky-Solutions_debugger-squad" \
            /o:"learnathon-by-geeky-solutions" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="${{ github.workspace }}/coverage.xml" \
            /d:sonar.sources="Ecommerce" \
            /d:sonar.tests="Ecommerce" \
            /d:sonar.test.inclusions="**/Ecommerce.Tests/**/*.cs" \
            /d:sonar.coverage.exclusions="**/Program.cs,**/Startup.cs" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.Designer.cs,**/Migrations/**,**/*.css,**/*.cshtml" \
            /d:sonar.sourceEncoding="UTF-8"

      - name: Build the solution
        run: dotnet build Ecommerce/Ecommerce.sln --no-restore --configuration Release --no-incremental

      - name: Run tests to generate test DLLs
        run: dotnet test Ecommerce/Ecommerce.Tests/Ecommerce.Tests.csproj --no-restore --configuration Release --no-build

      - name: Run coverlet for coverage
        run: |
          coverlet ./Ecommerce/Ecommerce.Tests/bin/Release/net8.0/Ecommerce.Tests.dll \
            --target "dotnet" \
            --targetargs "test Ecommerce/Ecommerce.Tests/Ecommerce.Tests.csproj --no-restore --no-build --configuration Release" \
            -f=opencover \
            -o="${{ github.workspace }}/coverage.xml" \
            --verbosity detailed

      - name: List coverage file (for debug)
        run: ls -la ${{ github.workspace }}/coverage.xml

      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
